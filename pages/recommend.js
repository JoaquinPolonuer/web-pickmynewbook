import Head from "next/head";
import styles from "../styles/Recommend.module.css";
import React from "react";
import SearchBar from "../components/home/SearchBar";
import BookCard from "../components/recommended/BookCard";
import { useRouter, withRouter } from "next/router";

export default withRouter(
  class Home extends React.Component {
    constructor(props) {
      super(props);
      this.state = {
        basedOn: {},
        recommended: [],
      };
    }

    handleCheckBox = (e) => {
      this.setState({ [e.target.name]: !this.state[e.target.name] });
    };

    getRecommended = () => {
      const book_id = this.props.router.asPath.split("book_id=")[1];
      fetch("http://localhost:8000/book-recommender/" + book_id)
        .then((res) => res.json())
        .then((res) =>
          this.setState({
            basedOn: res.my_book,
            recommended: res.recommended.data.slice(0, 9),
          })
        );
    };
    componentDidMount() {
      // console.log(this.props.router);
      // if (book_id) {
      this.getRecommended();
      // }
    }
    render() {
      return (
        <div className={styles.container}>
          <Head>
            <title>Recommendations based on</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <div className={styles.mainHead}>
            <div className={styles.centralContainer}>
              <h1 className={styles.title}>
                If you liked {this.state.basedOn.title}, you may like these as
                well
              </h1>

              <form className={styles.filters}>
                <SearchBar
                  include_author={this.state.include_author}
                  include_saga={this.state.include_saga}
                />
                <label className={styles.filterText}>
                  <input
                    className={styles.filterCheckbox}
                    name="include_saga"
                    type="checkbox"
                    checked={this.state.include_saga}
                    onChange={this.handleCheckBox}
                  />
                  Include books from the same saga
                </label>
                <br />
                {/* <label className={styles.filterText}>
              <input
              className={styles.filterCheckbox}
              name="include_author"
              type="checkbox"
              checked={this.state.include_author}
              onChange={this.handleCheckBox}
              />
              Include books from the same author
            </label> */}
              </form>
            </div>
          </div>
          <main className={styles.bookContainer}>
            {this.state.recommended.map((book, i) => (
              <BookCard book={book} key={i} />
            ))}
          </main>
        </div>
      );
    }
  }
);
